#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

mkdir -p "${BUILD_DIR}"
mkdir -p "${CACHE_DIR}"

cd "${CACHE_DIR}"

echo "-----> Downloading libpostal in ${CACHE_DIR}/libpostal"
echo "-----> build dir is ${BUILD_DIR}"

### Remove folder if exists (if cache'd from previous run)
rm -rf libpostal

echo "-----> cloning libpostal"

git clone https://github.com/openvenues/libpostal
cd libpostal/
./bootstrap.sh
LDFLAGS="-L${BUILD_DIR}/libpostal/lib" CFLAGS="-I${BUILD_DIR}/libpostal/include" PKG_CONFIG_PATH="${BUILD_DIR}/libpostal/lib/pkgconfig"
./configure  --enable-fast-install --disable-data-download --prefix=/app/libpostal --datadir=/app/libpostal/data

echo "-----> libpostal make"
make
make install

echo "-----> libpostal mv to ${BUILD_DIR}/libpostal"
mkdir -p "${BUILD_DIR}/libpostal"
mv /app/libpostal/* "${BUILD_DIR}/libpostal"

mkdir -p "${BUILD_DIR}/vendor/ruby-2.7.7/include"
mkdir -p "${BUILD_DIR}/vendor/ruby-2.7.7/lib"

cp -avr "${BUILD_DIR}/libpostal/include/." "${BUILD_DIR}/vendor/ruby-2.7.7/include/"
cp -avr "${BUILD_DIR}/libpostal/lib/." "${BUILD_DIR}/vendor/ruby-2.7.7/lib/"
